--- git status ---
HEAD detached from dc9bbf2
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   deploy/config.py
	modified:   deploy/play_ros1.py
	modified:   deploy/ros1_ws/src/CMakeLists.txt
	modified:   source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/actuators/actuator_cfg.py
	modified:   source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/actuators/actuator_pd.py
	modified:   source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/assets/hyqreal_asset.py
	modified:   source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/custom_events.py
	modified:   source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/agents/rsl_rl_ppo_cfg.py
	modified:   source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/hyqreal_env_cfg.py

no changes added to commit (use "git add" and/or "git commit -a") 


--- git diff ---
diff --git a/deploy/config.py b/deploy/config.py
index 18e8a1d..23f777d 100644
--- a/deploy/config.py
+++ b/deploy/config.py
@@ -4,11 +4,11 @@ dir_path = os.path.dirname(os.path.realpath(__file__))
 sys.path.append(dir_path+"/../")
 sys.path.append(dir_path+"/../scripts/rsl_rl")
 
-robot = 'aliengo'  # 'aliengo', 'go1', 'go2', 'b2', 'hyqreal1', 'hyqreal2', 'mini_cheetah' 
-scene = 'flat'  # flat, random_boxes, random_pyramids, perlin
+robot = 'hyqreal2'  # 'aliengo', 'go1', 'go2', 'b2', 'hyqreal1', 'hyqreal2', 'mini_cheetah' 
+scene = 'random_boxes'  # flat, random_boxes, random_pyramids, perlin
 
-#policy_path = "/home/iit.local/gturrisi/isaaclab_ws_home/basic-locomotion-dls-isaaclab/tested_policies/hyqreal/2025-07-23_09-19-46_8k_128_128_128_hyq/exported/policy.onnx"
-policy_path = dir_path + "/../tested_policies/" + robot + "/8k_128_128_128_aliengo_stop_and_go_correct_offset" + "/exported/policy.onnx"
+policy_path = "/home/alienware/isaaclab_ws_home/basic-locomotion-dls-isaaclab/logs/rsl_rl/rough_direct/2025-09-02_15-23-43_8k_128_128_128_hyqreal_delay_newkp/exported/policy.onnx"
+#policy_path = dir_path + "/../tested_policies/" + robot + "/8k_128_128_128_aliengo_stop_and_go_correct_offset" + "/exported/policy.onnx"
 
 # ----------------------------------------------------------------------------------------------------------------
 if(robot == "aliengo"):
@@ -18,12 +18,20 @@ if(robot == "aliengo"):
     Kp_stand_up_and_down = 25.
     Kd_stand_up_and_down = 2.
 
+elif(robot == "go1"):
+    Kp_walking = 20.
+    Kd_walking = 1.5
+
+    Kp_stand_up_and_down = 25.
+    Kd_stand_up_and_down = 2.
+
 elif(robot == "go2"):
     Kp_walking = 20.
     Kd_walking = 1.5
 
     Kp_stand_up_and_down = 25.
     Kd_stand_up_and_down = 2.
+
 elif(robot == "b2"):
     Kp_walking = 20.
     Kd_walking = 1.5
@@ -31,7 +39,7 @@ elif(robot == "b2"):
     Kp_stand_up_and_down = 25.
     Kd_stand_up_and_down = 2.
 elif(robot == "hyqreal2"):
-    Kp_walking = 175.
+    Kp_walking = 300.
     Kd_walking = 20.
 
     Kp_stand_up_and_down = 25.
diff --git a/deploy/play_ros1.py b/deploy/play_ros1.py
index 87d4c2a..bdc9428 100644
--- a/deploy/play_ros1.py
+++ b/deploy/play_ros1.py
@@ -36,8 +36,8 @@ os.system("renice -n -21 -p " + str(pid))
 os.system("echo -20 > /proc/" + str(pid) + "/autogroup")
 #for real time, launch it with chrt -r 99 python3 run_controller.py
 
-USE_MUJOCO_RENDER = False
-USE_MUJOCO_SIMULATION = False
+USE_MUJOCO_RENDER = True
+USE_MUJOCO_SIMULATION = True
 
 USE_SMOOTH_VELOCITY = True
 
diff --git a/deploy/ros1_ws/src/CMakeLists.txt b/deploy/ros1_ws/src/CMakeLists.txt
index 2ebd005..10f5b19 120000
--- a/deploy/ros1_ws/src/CMakeLists.txt
+++ b/deploy/ros1_ws/src/CMakeLists.txt
@@ -1 +1 @@
-/home/iit.local/gturrisi/mambaforge/envs/basic_locomotion_dls_isaaclab_ros1_env/share/catkin/cmake/toplevel.cmake
\ No newline at end of file
+/home/alienware/miniforge3/envs/basic_locomotion_dls_isaaclab_ros1_env/share/catkin/cmake/toplevel.cmake
\ No newline at end of file
diff --git a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/actuators/actuator_cfg.py b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/actuators/actuator_cfg.py
index 9b803c8..bb0468f 100644
--- a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/actuators/actuator_cfg.py
+++ b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/actuators/actuator_cfg.py
@@ -24,4 +24,6 @@ class IdentifiedActuatorCfg(DCMotorCfg):
     friction_dynamic: float = MISSING
     """ (in N-m-s/Rad)."""
     first_order_delay_filter: float = MISSING
-    """ (in seconds)."""
+    """ (in percentage)."""
+    second_order_delay_filter: float = MISSING
+    """ (in percentage)."""
diff --git a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/actuators/actuator_pd.py b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/actuators/actuator_pd.py
index 5c24f77..66d41d9 100644
--- a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/actuators/actuator_pd.py
+++ b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/actuators/actuator_pd.py
@@ -29,6 +29,10 @@ class IdentifiedActuator(DCMotor):
         self.first_order_delay_filter = self._parse_joint_parameter(self.cfg.first_order_delay_filter, 1.)
         self.last_joint_efforts = 0.0
 
+        self.second_order_delay_filter = self._parse_joint_parameter(self.cfg.second_order_delay_filter, 1.)
+        self.last_two_joint_efforts = 0.0
+
+
 
     def compute(
             self, control_action: ArticulationActions, joint_pos: torch.Tensor, joint_vel: torch.Tensor
@@ -36,11 +40,19 @@ class IdentifiedActuator(DCMotor):
         # call the base method
         control_action = super().compute(control_action, joint_pos, joint_vel)
 
+
         # apply first order delay on the torque
         control_action.joint_efforts = control_action.joint_efforts*self.first_order_delay_filter + \
             (1.-self.first_order_delay_filter)*self.last_joint_efforts
         self.last_joint_efforts = control_action.joint_efforts
 
+
+        # apply second order delay on the torque
+        control_action.joint_efforts = control_action.joint_efforts*self.second_order_delay_filter + \
+            (1.-self.second_order_delay_filter)*self.last_two_joint_efforts
+        self.last_two_joint_efforts = control_action.joint_efforts
+
+
         # apply friction model on the torque
         control_action.joint_efforts = control_action.joint_efforts - (self.friction_static * torch.tanh(
             joint_vel / self.activation_vel) + self.friction_dynamic * joint_vel)
diff --git a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/assets/hyqreal_asset.py b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/assets/hyqreal_asset.py
index e5a04e5..093ec33 100644
--- a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/assets/hyqreal_asset.py
+++ b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/assets/hyqreal_asset.py
@@ -12,12 +12,13 @@ from basic_locomotion_dls_isaaclab.assets import ISAAC_ASSET_DIR
 
 
 # HYQREAL robot configuration from mujoco
-stiffness_mujoco = 175.0 #200.0
-damping_mujoco = 14.0 #20.0
+stiffness_mujoco = 300.0 #200.0
+damping_mujoco = 20.0 #20.0
 friction_static_mujoco = 0.2
 friction_dynamic_mujoco = 0.6
 armature_mujoco = 0.01
 first_order_delay_filter = 0.9
+second_order_delay_filter = 0.9
 
 HYQREAL_HIP_ACTUATOR_CFG = IdentifiedActuatorCfg(
     joint_names_expr=[".*_hip_joint"],
@@ -31,6 +32,7 @@ HYQREAL_HIP_ACTUATOR_CFG = IdentifiedActuatorCfg(
     activation_vel=0.1,
     friction_dynamic=friction_dynamic_mujoco,
     first_order_delay_filter=first_order_delay_filter,
+    second_order_delay_filter=second_order_delay_filter,
 )
 
 HYQREAL_THIGH_ACTUATOR_CFG = IdentifiedActuatorCfg(
@@ -45,6 +47,7 @@ HYQREAL_THIGH_ACTUATOR_CFG = IdentifiedActuatorCfg(
     activation_vel=0.1,
     friction_dynamic=friction_dynamic_mujoco,
     first_order_delay_filter=first_order_delay_filter,
+    second_order_delay_filter=second_order_delay_filter,
 )
 
 HYQREAL_CALF_ACTUATOR_CFG = IdentifiedActuatorCfg(
@@ -59,6 +62,7 @@ HYQREAL_CALF_ACTUATOR_CFG = IdentifiedActuatorCfg(
     activation_vel=0.1,
     friction_dynamic=friction_dynamic_mujoco,
     first_order_delay_filter=first_order_delay_filter,
+    second_order_delay_filter=second_order_delay_filter,
 )
 
 
diff --git a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/custom_events.py b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/custom_events.py
index ddf56e5..72c47b1 100644
--- a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/custom_events.py
+++ b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/custom_events.py
@@ -59,6 +59,7 @@ def randomize_joint_friction_model(
     friction_distribution_params: tuple[float, float] | None = None,
     armature_distribution_params: tuple[float, float] | None = None,
     first_order_delay_filter_distribution_params: tuple[float, float] | None = None,
+    second_order_delay_filter_distribution_params: tuple[float, float] | None = None,
     operation: Literal["add", "scale", "abs"] = "abs",
     distribution: Literal["uniform", "log_uniform", "gaussian"] = "uniform",
 ):
@@ -116,6 +117,16 @@ def randomize_joint_friction_model(
                 )[env_ids][:, actuator_joint_ids]
                 actuator.first_order_delay_filter[env_ids[:, None], actuator_joint_ids] = first_order_delay_filter
 
+    if second_order_delay_filter_distribution_params is not None:
+        for actuator in asset.actuators.values():
+            actuator_joint_ids = [joint_id in joint_ids for joint_id in actuator.joint_indices]
+            if sum(actuator_joint_ids) > 0:
+                second_order_delay_filter = actuator.second_order_delay_filter.to(asset.device).clone()
+                second_order_delay_filter = _randomize_prop_by_op(
+                    second_order_delay_filter, second_order_delay_filter_distribution_params, env_ids, torch.arange(second_order_delay_filter.shape[1]), operation=operation, distribution=distribution
+                )[env_ids][:, actuator_joint_ids]
+                actuator.second_order_delay_filter[env_ids[:, None], actuator_joint_ids] = second_order_delay_filter
+
 
 def zero_command_velocity(
     env: ManagerBasedEnv,
diff --git a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/agents/rsl_rl_ppo_cfg.py b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/agents/rsl_rl_ppo_cfg.py
index ed6db40..82aba1f 100644
--- a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/agents/rsl_rl_ppo_cfg.py
+++ b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/agents/rsl_rl_ppo_cfg.py
@@ -137,7 +137,7 @@ class RoughPPORunnerCfg(RslRlOnPolicyRunnerCfg):
         activation="elu",
     )
     algorithm = RslRlPpoAlgorithmCfg(
-        class_name="PPO", #PPO, PPOSymmDataAugmented #AMP_PPO
+        class_name="PPOSymmDataAugmented", #PPO, PPOSymmDataAugmented #AMP_PPO
         value_loss_coef=1.0,
         use_clipped_value_loss=True,
         clip_param=0.2,
diff --git a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/hyqreal_env_cfg.py b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/hyqreal_env_cfg.py
index b96d7d6..ed06dc0 100644
--- a/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/hyqreal_env_cfg.py
+++ b/source/basic_locomotion_dls_isaaclab/basic_locomotion_dls_isaaclab/tasks/locomotion/hyqreal_env_cfg.py
@@ -85,10 +85,17 @@ class EventCfg:
         func=custom_events.randomize_joint_friction_model,
         mode="startup",
         params={"asset_cfg": SceneEntityCfg("robot", joint_names=[".*"]), 
-                "first_order_delay_filter_distribution_params": (0.8, 1.0),
+                "first_order_delay_filter_distribution_params": (0.1, 0.3),
                 "operation": "abs"},
     )
     
+    scale_all_joint_second_order_delay_filter_model = EventTerm(
+        func=custom_events.randomize_joint_friction_model,
+        mode="startup",
+        params={"asset_cfg": SceneEntityCfg("robot", joint_names=[".*"]), 
+                "second_order_delay_filter_distribution_params": (0.1, 0.3),
+                "operation": "abs"},
+    )
 
 
     actuator_gains = EventTerm(